stages:
  - build
  - deploy

variables:
  ZIP_NAME: "artifacts.zip"

build:
  stage: build
  script:
    - echo "Building artifacts..."
    - zip -r ${ZIP_NAME} .
    - echo "Artifacts have been zipped."
  artifacts:
    paths:
      - ${ZIP_NAME}
    expire_in: 1 hour

deploy:
  stage: deploy
  dependencies:
    - build
  script:
    - echo "Deploying to ${DEPLOY_ENV} environment..."

    - |
      if [ "$DEPLOY_ENV" == "PPE" ]; then
        export TOKEN_URL="https://api.ppe.refinitiv.com/auth/oauth/v2/token"
        export DEPLOY_URL="https://api.refinitiv.com/admin/v1/api-deploy/stage?environment=PreProduction"
      elif [ "$DEPLOY_ENV" == "PROD" ]; then
        export TOKEN_URL="https://api.prod.refinitiv.com/auth/oauth/v2/token"
        export DEPLOY_URL="https://api.refinitiv.com/admin/v1/api-deploy/stage?environment=Production"
      else
        echo "Unknown environment: $DEPLOY_ENV"
        exit 1
      fi

    # Fetching the access token
    - |
      export ACCESS_TOKEN=$(curl --location --request POST $TOKEN_URL \
        --header 'Content-Type: application/x-www-form-urlencoded' \
        --data-urlencode "username=${USERNAME}" \
        --data-urlencode "password=${PASSWORD}" \
        --data-urlencode "client_id=${CLIENT_ID}" \
        --data-urlencode "grant_type=password" \
        --data-urlencode "scope=trapi" \
        --data-urlencode "takeExclusiveSignOnControl=true" | jq -r '.access_token')

    # Deploying the artifact to the selected environment
    - echo "Deploying to ${DEPLOY_ENV} environment..."
    - |
      curl --location --request POST "$DEPLOY_URL" \
        --header "Authorization: Bearer ${ACCESS_TOKEN}" \
        --header "Content-Type: application/octet-stream" \
        --data-binary "@${ZIP_NAME}"
    - echo "Deployment to $DEPLOY_ENV environment complete."

  rules:
    - when: manual  # Make the deploy job manually triggerable
  environment:
    name: $DEPLOY_ENV
